## vim /etc/logstash/conf.d/logstash-nginx.conf
input {
  file {
    path => "/var/log/nginx/*.log" # tail access and error logs
  }
}
filter {
  if [path] =~ "access" {
    grok {
      match => { "message" => '%{IPORHOST:clientip} %{NGUSER:ident} %{NGUSER:auth} \[%{HTTPDATE:timestamp}\] "%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}" %{NUMBER:response}  (?:%{NUMBER:bytes}|-) (?:"(?:%{URI:referrer}|-)"|%{QS:referrer}) %{QS:agent} %{QS:xforwardedfor} %{IPORHOST:host} %{BASE10NUM:request_duration}"' }
      match => { "message" => "%{IPORHOST:host} - %{USERNAME:user} \[%{HTTPDATE:time_local}\] "%{DATA:server_name}" "%{METHOD:method} %{URIPATHPARAM:path} HTTP/%{NUMBER:http_version}" %{INT:status} %{INT:body_bytes_sent} "%{URI:referer}" %{QS:user_agent}" }
      remove_field => "message"
    }
    date {
      match => [ "time_local", "dd/MMM/YYYY:HH:mm:ss Z" ]
      target => "@timestamp"
      remove_field => "time_local"
    }
  }
  else if [path] =~ "error" {
    grok {
      match => { "message" => "%{ERRORDATE:time_local} \[%{LOGLEVEL:level}\] %{INT:process_id}#%{INT:thread_id}: \*(%{INT:connection_id})? %{GREEDYDATA:description}" }
      remove_field => "message"
    }
    date {
      match => [ "[nginx][error][time]", "YYYY/MM/dd H:m:s" ]
      remove_field => "[nginx][error][time]"
    }
  }
  
}
output {
  elasticsearch {
    hosts => ["localhost:9200"]
    manage_template => false
    index => "my-nginx-%{+YYYY.MM.dd}"
  }
}
  